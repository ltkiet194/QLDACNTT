@model GameStore.Models.KHACHHANG

@{
    ViewBag.Title = "DetailInfo";
    Layout = "~/Views/Shared/_LayoutStore.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

<style>
    body {
        margin-top: 20px;
        color: #69707a;
    }

    label {
        color: #000;
    }

    .form-control:focus {
        color: #000 !important;
        background-color: #FFF !important;
    }

    .img-account-profile {
        height: 10rem;
    }

    .rounded-circle {
        border-radius: 50% !important;
    }

    .card {
        box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
    }

        .card .card-header {
            font-weight: 500;
        }

    .card-header:first-child {
        border-radius: 0.35rem 0.35rem 0 0;
    }

    .card-header {
        padding: 1rem 1.35rem;
        margin-bottom: 0;
        background-color: rgba(33, 40, 50, 0.03);
        border-bottom: 1px solid rgba(33, 40, 50, 0.125);
    }

    .form-control, .dataTable-input {
        display: block;
        width: 100%;
        padding: 0.875rem 1.125rem;
        font-size: 0.875rem;
        font-weight: 400;
        line-height: 1;
        color: #69707a;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #c5ccd6;
        -webkit-appearance: none;
        -moz-appearance: none;
        border-radius: 0.35rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .nav-borders .nav-link.active {
        color: #ffffff;
        border-bottom-color: #ffffff;
    }

    .nav-borders .nav-link {
        color: #69707a;
        border-bottom-width: 0.125rem;
        border-bottom-style: solid;
        border-bottom-color: transparent;
        padding-top: 0.5rem;
        padding-bottom: 0.5rem;
        padding-left: 0;
        padding-right: 0;
        margin-left: 1rem;
        margin-right: 1rem;
    }
</style>

<div class="container-xl px-4 mt-4">
    <!-- Account page navigation-->
    <nav class="nav nav-borders">
        <a class="nav-link active ms-0" href="#" id="profileTab">Profile</a>
        <a class="nav-link" href="#" id="securityTab">Security</a>
    </nav>
    <hr class="mt-0 mb-4">
    <div class="row">
        <div class="col-xl-4">
            <!-- Profile picture card-->
            <div class="card mb-4 mb-xl-0">
                <div class="card-header">Profile Picture</div>
                <div class="card-body text-center">
                    <!-- Profile picture image-->
                    <img style="width: 160px;" class="img-account-profile rounded-circle mb-2" id="profilePictureImage" src="@Model.Avatar" alt="">
                    <!-- Profile picture help block-->
                    <div class="small font-italic text-muted mb-4">JPG or PNG no larger than 5 MB</div>
                    <input type="file" id="profilePictureInput" accept="image/jpeg, image/png" style="display: none;">
                    <!-- Profile picture upload button-->
                    <button class="btn btn-primary" id="uploadImageButton" type="button">Upload new image</button>
                    <button style="margin-top:5px" class="btn btn-primary" id="updateImageButton" type="button">Save</button>
                </div>
            </div>
        </div>
        <div class="col-xl-8">
            <!-- Account details card-->
            <div class="card mb-4" id="accountDetailsCard">
                <div class="card-header">Account Details</div>
                <div class="card-body">
                    @using (Html.BeginForm("DetailInfo", "Account", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()

                        <!-- Form Group (username)-->
                        <div class="mb-3">
                            <label class="small mb-1" for="inputUsername">Username</label>
                            <input class="form-control" name="inputUsername" id="inputUsername" type="text" placeholder="Enter your username" value="@Model.TaiKhoan">
                        </div>

                        <div class=" mb-3">
                            <label class="small mb-1" for="inputFirstName">Name</label>
                            <input class="form-control" name="inputName" id="inputName" type="text" placeholder="Enter your first name" value="@Model.HoTen">
                        </div>
                        <!-- Form Row        -->
                        <div class="mb-3">

                            <label class="small mb-1" for="inputLocation">Address</label>
                            <input class="form-control" name="inputAddress" id="inputAddress" type="text" placeholder="Enter your location" value="@Model.DiaChi">

                        </div>
                        <!-- Form Group (email address)-->
                        <div class="mb-3">
                            <label class="small mb-1" for="inputEmailAddress">Email address</label>
                            <input class="form-control" name="inputEmailAddress" id="inputEmailAddress" type="email" placeholder="Enter your email address" value="@Model.Email">
                        </div>
                        <!-- Form Row-->
                        <div class="row gx-3 mb-3">
                            <!-- Form Group (phone number)-->
                            <div class="col-md-6">
                                <label class="small mb-1" for="inputPhone">Phone number</label>
                                <input class="form-control" name="inputPhone" id="inputPhone" type="tel" placeholder="Enter your phone number" value="@Model.DienThoai">
                            </div>
                            <!-- Form Group (birthday)-->
                            <div class="col-md-6">
                                <label class="small mb-1" for="inputBirthday">Birthday</label>
                                <div class="col-md-12">
                                    <input class="form-control" id="inputBirthday" type="text" placeholder="Enter your birthday" value="@Model.NgaySinh.ToString()" readonly>
                                    <input class="form-control" name="inputBirthday" id="inputBirthday" type="date" placeholder="Enter your birthday">
                                </div>
                            </div>
                        </div>
                        <!-- Save changes button-->
                        <button class="btn btn-primary" type="submit">Save changes</button>
                    }
                </div>
            </div>
            <!-- Change password card-->
            <div class="card mb-4" id="changePasswordCard" style="display: none;">
                <div class="card-header">Change Password</div>
                <div class="card-body">
                    <!-- Form Group (current password)-->
                    <div class="mb-3">
                        <label class="small mb-1" for="currentPassword">Current Password</label>
                        <input class="form-control" id="currentPassword" type="password" value="@Model.MatKhau" placeholder="Enter current password">
                    </div>
                    <!-- Form Group (new password)-->
                    <div class="mb-3">
                        <label class="small mb-1" for="newPassword">New Password</label>
                        <input class="form-control" id="newPassword" type="password" placeholder="Enter new password">
                    </div>
                    <!-- Form Group (confirm password)-->
                    <div class="mb-3">
                        <label class="small mb-1" for="confirmPassword">Confirm Password</label>
                        <input class="form-control" id="confirmPassword" type="password" placeholder="Confirm new password">
                    </div>
                    <button class="btn btn-primary" id="savePasswordBtn" type="button">Save</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    //CHọn file
    $(document).ready(function () {
        // Khi nút "Upload new image" được nhấn
        $("#uploadImageButton").click(function () {
            $("#profilePictureInput").click(); // Kích hoạt sự kiện click trên input type=file
        });

        // Khi tệp tin được chọn
        $("#profilePictureInput").change(function () {
            var file = this.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $("#profilePictureImage").attr("src", e.target.result);
                }
                reader.readAsDataURL(file);
            }
        });

        // Khi nút "Save" được nhấn
        $("#updateImageButton").click(function () {
            var file = $("#profilePictureInput").prop("files")[0];
            if (file) {
                var formData = new FormData();
                formData.append("profilePicture", file);

                $.ajax({
                    url: "/Account/UploadProfilePicture",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        toastr.success("Profile picture updated successfully.");
                    },
                    error: function () {
                        toastr.error("An error occurred. Please try again.");
                    }
                });
            } else {
                toastr.error("Please select an image file.");
            }
        });
    });

    // Get the date string from the Razor model
    var ngaySinh = "@Model.NgaySinh.ToString()";

    // Format the date string using JavaScript
    var formattedNgaySinh = new Date(ngaySinh).toLocaleDateString("en-GB", { day: '2-digit', month: '2-digit', year: 'numeric' });

    // Set the formatted date string as the value of the input
    document.getElementById("inputBirthday").value = formattedNgaySinh;

    // JavaScript code to handle the click event on the Security tab
    document.getElementById("securityTab").addEventListener("click", function (event) {
        event.preventDefault(); // Prevent the default behavior of the link

        // Add the "active" class to the Security tab and remove it from the Profile tab
        document.getElementById("securityTab").classList.add("active");
        document.getElementById("profileTab").classList.remove("active");

        // Show the Change Password form and hide the Account Details form
        document.getElementById("changePasswordCard").style.display = "block";
        document.getElementById("accountDetailsCard").style.display = "none";
    });

    // JavaScript code to handle the click event on the Profile tab
    document.getElementById("profileTab").addEventListener("click", function (event) {
        event.preventDefault(); // Prevent the default behavior of the link

        // Add the "active" class to the Profile tab and remove it from the Security tab
        document.getElementById("profileTab").classList.add("active");
        document.getElementById("securityTab").classList.remove("active");

        // Show the Account Details form and hide the Change Password form
        document.getElementById("accountDetailsCard").style.display = "block";
        document.getElementById("changePasswordCard").style.display = "none";
    });
    // Đổi pass
    $(document).ready(function () {
        // Gắn sự kiện click vào nút "Save" trong phần Change Password
        $("#savePasswordBtn").click(function () {

            // Lấy giá trị từ các trường input
            var newPassword = $("#newPassword").val();
            var confirmPassword = $("#confirmPassword").val();

            // Kiểm tra giá trị không được rỗng
            if (newPassword === "" || confirmPassword === "") {
                toastr.error("Please fill in all fields.", "Error");
                return; // Dừng lại và không tiếp tục xử lý
            }

            // Kiểm tra mật khẩu mới và xác nhận mật khẩu mới có khớp nhau
            if (newPassword !== confirmPassword) {
                // Hiển thị thông báo lỗi nếu mật khẩu không khớp
                toastr.error("New password and confirm password do not match.", "Error");
                return;
            }
            // Gửi dữ liệu lên server
            var data = {
                newPass: newPassword,
                confirmPass: confirmPassword
            };

            // Gửi yêu cầu AJAX đến phương thức hành động ChangePassword
            $.ajax({
                url: '/Account/ChangePassinfo', // Đường dẫn xử lý request lưu vào cơ sở dữ liệu
                type: 'POST',
                data: data,
                success: function (response) {
                    if (response.success === true) {
                        // Xử lý sau khi thành công
                        toastr.success("Password changed successfully.");
                    } else {
                        toastr.error("Error");
                    }
                },
                error: function () {
                    alert("An error occurred. Please try again.");
                }
            });
        });
    });
</script>

